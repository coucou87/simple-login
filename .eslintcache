[{"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\index.js":"1","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\reportWebVitals.js":"2","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\App.js":"3","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\HOOKS\\UseDataFetching.js":"4","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Constants\\api.js":"5","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\constants\\api.js":"6","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\languages\\index.js":"7","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Button\\Button.js":"8","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\ErrorModal\\ErrorModal.js":"9","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\History\\history.js":"10","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\home\\Home.js":"11","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\sendCode\\SendCode.js":"12","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\register\\Register.js":"13","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\authenticated\\Authenticated.js":"14","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\history\\history.js":"15","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\errorModal\\ErrorModal.js":"16","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\button\\Button.js":"17","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\table\\Table.js":"18","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\loader\\Loader.js":"19","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\LanguageSelector.js":"20","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\container\\language.js":"21"},{"size":659,"mtime":1610541382981,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1606138302432,"results":"24","hashOfConfig":"23"},{"size":1571,"mtime":1610787040322,"results":"25","hashOfConfig":"23"},{"size":1921,"mtime":1610651005349,"results":"26","hashOfConfig":"23"},{"size":226,"mtime":1610179282645,"results":"27","hashOfConfig":"23"},{"size":272,"mtime":1610281404564,"results":"28","hashOfConfig":"23"},{"size":185,"mtime":1610474584151,"results":"29","hashOfConfig":"23"},{"size":200,"mtime":1610548439745,"results":"30","hashOfConfig":"23"},{"size":708,"mtime":1610548925848,"results":"31","hashOfConfig":"23"},{"size":86,"mtime":1610548507472,"results":"32","hashOfConfig":"23"},{"size":1077,"mtime":1610786541505,"results":"33","hashOfConfig":"23"},{"size":3733,"mtime":1610786541856,"results":"34","hashOfConfig":"23"},{"size":4317,"mtime":1610786541856,"results":"35","hashOfConfig":"23"},{"size":3075,"mtime":1610787501086,"results":"36","hashOfConfig":"23"},{"size":86,"mtime":1610548507472,"results":"37","hashOfConfig":"23"},{"size":594,"mtime":1610609045169,"results":"38","hashOfConfig":"23"},{"size":200,"mtime":1610548439745,"results":"39","hashOfConfig":"23"},{"size":1417,"mtime":1610786541817,"results":"40","hashOfConfig":"23"},{"size":282,"mtime":1610550083003,"results":"41","hashOfConfig":"23"},{"size":1130,"mtime":1610786971306,"results":"42","hashOfConfig":"23"},{"size":1330,"mtime":1610786538733,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15g6l59",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\index.js",[],["93","94"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\reportWebVitals.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\App.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\HOOKS\\UseDataFetching.js",[],["95","96"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Constants\\api.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\constants\\api.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\languages\\index.js",[],["97","98"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Button\\Button.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\ErrorModal\\ErrorModal.js",["99"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\History\\history.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\home\\Home.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\sendCode\\SendCode.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\register\\Register.js",["100","101"],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport history from '../history/history';\r\nimport { baseUrl, registerEndPoint } from '../../constants/api';\r\nimport { Text } from '../language/language';\r\nimport './register.css';\r\nimport ErrorModal from '../errorModal/ErrorModal';\r\nimport Cookies from 'universal-cookie';\r\nimport Logo from '../../constants/images/logo.png';\r\nimport Button from '../button/Button';\r\n\r\nexport default function Register({ getModel }) {\r\n    const [username, setUsername] = useState('')\r\n    const [app, setApp] = useState('pros')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const getLanguage = () => {\r\n        switch (cookie.get('lang')) {\r\n            case ('en'): return \"2\"\r\n            case ('fa'): return \"1\"\r\n        }\r\n    }\r\n\r\n   \r\n    const onSubmit = (data) => {\r\n        fetch(`${baseUrl}/${registerEndPoint}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: data.username,\r\n                app: data.app\r\n            })\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status === 200) {\r\n                    getModel({\r\n                        \"username\": username,\r\n                        \"password\": responseData.data.data.code,\r\n                        \"registered\": responseData.data.data.registered === false ? \"0\" : \"1\",\r\n                        \"languageId\": getLanguage(),\r\n                        \"app\": app\r\n                    })\r\n                    history.push(\"/SendCode\")\r\n                } else {\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <div className=\"register-container\">\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n                    <img src={Logo} className=\"Logo\" alt=\"\" />\r\n                    <div className=\"wrapper\">\r\n                        <input\r\n                            className=\"register-input\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            ref={register({\r\n                                required: <Text tid=\"register-input\" />,\r\n                                pattern: {\r\n                                    value: /^.{1,20}$/,\r\n                                    message: <Text tid=\"max-length-20-error-message\" />\r\n                                }\r\n                            })}\r\n                        />\r\n                        <div className=\"error\">\r\n                            {errors.username && errors.username.message}\r\n                        </div>\r\n                        <select className=\"register-select\" name=\"app\" value=\"pros\"\r\n                            ref={register} value={app} onChange={(e) => setApp(e.target.value)} >\r\n                            <option key=\"pros\" value=\"pros\" >pros</option>\r\n                            <option key=\"admin\" value=\"admin\">admin</option>\r\n                            <option key=\"care\" value=\"care\">care</option>\r\n                        </select>\r\n                        <Button>\r\n                            <Text tid=\"register-btn\" />\r\n                        </Button>\r\n                        <Button onClick={() => history.push(\"/\")}>\r\n                            <Text tid=\"back-btn\" />\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\authenticated\\Authenticated.js",["102","103"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { baseUrl, authEndPoint } from '../../constants/api';\r\nimport history from '../history/history';\r\nimport { Text, LanguageContext  } from '../container/language';\r\nimport Cookies from 'universal-cookie';\r\nimport ErrorModal from '../errorModal/ErrorModal';\r\nimport Button from '../button/Button';\r\nimport Table from '../table/Table';\r\nimport Loader from '../loader/Loader';\r\nimport './authenticated.css';\r\n\r\nexport default function Authenticated() {\r\n    const { dictionary } = useContext(LanguageContext);\r\n    const [fullname, setFullname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const exit = () => {\r\n        history.push(\"/\")\r\n        cookie.set('token', '', { path: '/' })\r\n        cookie.set('refresh-token', '', { path: '/' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = cookie.get(\"token\")\r\n        fetch(`${baseUrl}/${authEndPoint}?origin=*`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status === 200) {\r\n                    setLoading(true)\r\n                    setId(responseData.data.data.id)\r\n                    setFullname(responseData.data.data.full_name)\r\n                    setName(responseData.data.data.name)\r\n                    setUsername(responseData.data.data.username)\r\n                } else {\r\n                    setLoading(false)\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            });\r\n    }, [cookie, showModal])\r\n\r\n    return (\r\n        <>\r\n          {dictionary.enterText}\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <div className=\"auth-wrapper\">\r\n                <Table name={name} fullname={fullname} username={username} />\r\n                {!loading && <Loader />}\r\n                <div className=\"auth-btn-container\">\r\n                    <Button onClick={exit} className=\"auth-btn\">\r\n                        <Text tid=\"logout-btn\" />\r\n                    </Button>\r\n                    <Button onClick={() => history.push(\"/\")}>\r\n                        <Text tid=\"back-btn\" />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\history\\history.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\errorModal\\ErrorModal.js",["104","105"],"import React, { useState, useEffect } from 'react';\r\nimport './errorModal.css';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport default function ErrorModal({ errorTxt, handleClose }) {\r\n    const cookie = new Cookies();\r\n    const getDirection = () => { return cookie.get('dir') }\r\n\r\n    return (\r\n        <div className=\"error-container\">\r\n            <div style={{ direction: getDirection() }} className=\"error-wrapper\">\r\n                <button onClick={handleClose} className=\"error-modal-btn\"> X </button>\r\n                <p>{errorTxt}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\button\\Button.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\table\\Table.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\loader\\Loader.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\LanguageSelector.js",["106"],"import React, { useContext, useEffect } from 'react';\r\nimport { languageOptions } from '../languages';\r\nimport { LanguageContext } from './container/language';\r\nimport Cookies from 'universal-cookie';\r\nimport './languageSelector.css';\r\n\r\nexport default function LanguageSelector() {\r\n  const { userLanguage, userLanguageChange } = useContext(LanguageContext);\r\n  const cookie = new Cookies();\r\n\r\n  // set selected language by calling context method\r\n  const handleLanguageChange = e => userLanguageChange(e.target.value);\r\n  \r\n  let defaultLanguage = cookie.get('lang');\r\n  useEffect(() => {\r\n   \r\n    if (!defaultLanguage) {\r\n      cookie.set('dir', defaultLanguage === 'fa' ? 'rtl' : 'ltr');\r\n      defaultLanguage = window.navigator.language.substring(0, 2);\r\n    }\r\n    userLanguageChange(defaultLanguage);\r\n  }, [userLanguageChange, cookie]);\r\n\r\n  return (\r\n    <select className=\"language-select\"\r\n      onChange={handleLanguageChange}\r\n      value={userLanguage}\r\n    >\r\n      {Object.entries(languageOptions).map(([id, name]) => (\r\n        <option key={id} value={id} >{name}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\container\\language.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":11,"nodeType":"117","endLine":7,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":22,"column":9,"nodeType":"120","messageId":"121","endLine":25,"endColumn":10},{"ruleId":"122","severity":1,"message":"123","line":85,"column":44,"nodeType":"124","endLine":85,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":20,"column":12,"nodeType":"127","messageId":"128","endLine":20,"endColumn":14},{"ruleId":"115","severity":1,"message":"129","line":21,"column":11,"nodeType":"117","endLine":21,"endColumn":33},{"ruleId":"125","severity":1,"message":"130","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"131","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"132","line":19,"column":25,"nodeType":"133","endLine":19,"endColumn":66},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],["134"],["135"],"react-hooks/exhaustive-deps","The 'cookie' object construction makes the dependencies of useEffect Hook (at line 12) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'cookie' in its own useMemo() Hook.","VariableDeclarator","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","The 'cookie' object construction makes the dependencies of useEffect Hook (at line 57) change on every render. To fix this, wrap the initialization of 'cookie' in its own useMemo() Hook.","'useState' is defined but never used.","'useEffect' is defined but never used.","Assignments to the 'defaultLanguage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]