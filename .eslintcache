[{"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\index.js":"1","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\reportWebVitals.js":"2","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\App.js":"3","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\history.js":"4","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\Register.js":"5","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\HOOKS\\UseDataFetching.js":"6","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\Home.js":"7","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Constants\\api.js":"8","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Register.js":"9","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\history.js":"10","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\constants\\api.js":"11","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Home.js":"12","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\SendCode.js":"13","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\languages\\index.js":"14","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\language\\Language.js":"15","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\language\\LanguageSelector.js":"16","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\ErrorModal.js":"17","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Loader.js":"18","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Authenticated.js":"19","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Button.js":"20","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Welcome.js":"21"},{"size":661,"mtime":1610275784576,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1606138302432,"results":"24","hashOfConfig":"23"},{"size":1412,"mtime":1610389638263,"results":"25","hashOfConfig":"23"},{"size":86,"mtime":1610093538039,"results":"26","hashOfConfig":"23"},{"size":2347,"mtime":1610184344730,"results":"27","hashOfConfig":"23"},{"size":1142,"mtime":1610114195820,"results":"28","hashOfConfig":"23"},{"size":569,"mtime":1610181044553,"results":"29","hashOfConfig":"23"},{"size":226,"mtime":1610179282645,"results":"30","hashOfConfig":"23"},{"size":3669,"mtime":1610383633409,"results":"31","hashOfConfig":"23"},{"size":86,"mtime":1610093538039,"results":"32","hashOfConfig":"23"},{"size":272,"mtime":1610281404564,"results":"33","hashOfConfig":"23"},{"size":766,"mtime":1610382593379,"results":"34","hashOfConfig":"23"},{"size":3073,"mtime":1610383177931,"results":"35","hashOfConfig":"23"},{"size":184,"mtime":1610378080289,"results":"36","hashOfConfig":"23"},{"size":1251,"mtime":1610299684628,"results":"37","hashOfConfig":"23"},{"size":1125,"mtime":1610391875709,"results":"38","hashOfConfig":"23"},{"size":664,"mtime":1610382841999,"results":"39","hashOfConfig":"23"},{"size":890,"mtime":1610287686336,"results":"40","hashOfConfig":"23"},{"size":3154,"mtime":1610389972100,"results":"41","hashOfConfig":"23"},{"size":228,"mtime":1610383419891,"results":"42","hashOfConfig":"23"},{"size":239,"mtime":1610390103997,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15g6l59",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\index.js",[],["94","95"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\reportWebVitals.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\App.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\history.js",[],["96","97"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\Register.js",["98","99","100"],"import React, { useState } from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport history from './history'\r\nimport {baseUrl , registerEndPoint} from '../Constants/api'\r\n\r\n\r\nexport default function Register() {\r\n    const [mobileNumber, setMobNumber] = useState(\"\")\r\n    const handleMobNumber = (e) => setMobNumber(e.target.value)\r\n\r\n    const { register, handleSubmit, errors } = useForm(); // initialize the hook\r\n\r\n    const onSubmit = (data) => {\r\n            fetch( `${baseUrl}/${registerEndPoint}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                // body: JSON.stringify({\r\n                //     username:data.username,\r\n                //     app:data.app\r\n                // })\r\n            })\r\n                .then(response => response.json())\r\n                .then((responseData) => {\r\n                   console.log(responseData)\r\n                })\r\n    };\r\n\r\n    return (\r\n       \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input name=\"username\" ref={register({ required: true })}/>\r\n              {errors.username && 'User Name is required.'}\r\n          <input type=\"hidden\" name=\"app\" value=\"pros\" ref={register}/>\r\n\r\n          <select ref={register} >\r\n              <option key=\"pros\" value=\"pros\">pros</option>\r\n              <option key=\"admin\" value=\"admin\">admin</option>\r\n              <option key=\"care\" value=\"care\">care</option>\r\n          </select>\r\n          <input type=\"submit\" />\r\n        </form>\r\n      \r\n\r\n\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\HOOKS\\UseDataFetching.js",[],["101","102"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Components\\Home.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\Constants\\api.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Register.js",["103","104","105","106","107"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport history from './history'\r\nimport { baseUrl, registerEndPoint } from '../constants/api'\r\nimport { Text } from './language/Language';\r\nimport './register.css'\r\nimport ErrorModal from './ErrorModal'\r\nimport Cookies from 'universal-cookie';\r\nimport Logo from '../constants/images/logo.png'\r\nimport Button from './Button'\r\n\r\nexport default function Register({ getModel }) {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [app, setApp] = useState('pros')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('qwe')\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const handleBack = () => history.push(\"/Home\")\r\n    const getLanguage = () => {\r\n        switch (cookie.get('lang')) {\r\n            case ('en'): return \"2\"\r\n            case ('fa'): return \"1\"\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        fetch(`${baseUrl}/${registerEndPoint}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: data.username,\r\n                app: data.app\r\n            })\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status == 200) {\r\n                    getModel({\r\n                        \"username\": username,\r\n                        \"password\": responseData.data.data.code,\r\n                        \"registered\": responseData.data.data.registered == false ? \"0\" : \"1\",\r\n                        \"languageId\": getLanguage(),\r\n                        \"app\": app,\r\n                    })\r\n                    history.push(\"/SendCode\")\r\n                } else {\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n                // console.log('error', error)\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n                <img src={Logo} className=\"Logo\"  />\r\n                <div className=\"wrapper\">\r\n                    <input className=\"input\" name=\"username\" value={username} ref={register({ required: true })} onChange={(e) => setUsername(e.target.value)} />\r\n                    <div className=\"error\">\r\n                        {errors.username && <Text tid=\"username-error\" />}\r\n                    </div>\r\n                    <select className=\"select\" name=\"app\" value=\"pros\" ref={register} value={app} onChange={(e) => setApp(e.target.value)} >\r\n                        <option key=\"pros\" value=\"pros\" >pros</option>\r\n                        <option key=\"admin\" value=\"admin\">admin</option>\r\n                        <option key=\"care\" value=\"care\">care</option>\r\n                    </select>\r\n\r\n                    <Button>\r\n                        <Text tid=\"register-btn\" />\r\n                    </Button>\r\n                    <Button onClick={handleBack}>\r\n                        <Text tid=\"back-btn\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\history.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\constants\\api.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Home.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\SendCode.js",["108","109","110","111"],"import React, { useState, useEffect } from 'react'\r\nimport { Text } from './language/Language';\r\nimport { baseUrl, verifyEndPoint } from '../constants/api'\r\nimport { useForm } from 'react-hook-form'\r\nimport ErrorModal from './ErrorModal'\r\nimport Cookies from 'universal-cookie';\r\nimport history from './history'\r\nimport './sendCode.css'\r\nimport Button from './Button'\r\nimport Logo from '../constants/images/logo.png'\r\n\r\nexport default function SendCode({ model, login }) {\r\n    const [code, setCode] = useState()\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const cookie = new Cookies();\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    useEffect(() => {\r\n        console.log(model)\r\n        console.log(\"useEffect\")\r\n        setCode(model.password)\r\n    }, [])\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const getDirection = () => { return cookie.get('dir') }\r\n\r\n    const onSubmit = () => {\r\n        if (model.password === undefined) {\r\n            console.log(\"model not found\")\r\n            return\r\n        }\r\n\r\n        const formdata = new FormData();\r\n        formdata.append(\"username\", model.username);\r\n        formdata.append(\"password\", model.password);\r\n        formdata.append(\"registered\", model.registered);\r\n        formdata.append(\"language_id\", model.languageId);\r\n        formdata.append(\"app\", model.app);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: formdata\r\n        };\r\n\r\n        fetch(`${baseUrl}/${verifyEndPoint}`, requestOptions)\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then(result => {\r\n                if (result.status == 200) {\r\n                    cookie.set(\"token\", result.data.data.access_token, { path: '/' })\r\n                    cookie.set(\"refresh-token\", result.data.data.refresh_token, { path: '/' })\r\n                    login()\r\n                    history.push(\"./Auth\")\r\n                } else {\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(result.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n                <img src={Logo} className=\"Logo\" />\r\n                <label style={{ direction: getDirection(), paddingLeft: '10px', fontSize:'1em' }}>\r\n                    <Text tid=\"code\" /></label>\r\n                <input disabled className=\"input\" name=\"code\" value={code} ref={register({ required: true })} onChange={(e) => setCode(e.target.value)} />\r\n\r\n                <Button >\r\n                    {<Text tid=\"register-btn\" />}\r\n                </Button>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\languages\\index.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\language\\Language.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\language\\LanguageSelector.js",["112"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\ErrorModal.js",["113"],"import React, { useState, useEffect } from 'react'\r\nimport './errorModal.css'\r\nimport Cookies from 'universal-cookie';\r\nimport Button from './Button'\r\n\r\nexport default function ErrorModal({ errorTxt, handleClose }) {\r\n    const cookie = new Cookies();\r\n    const [direction, setDirection] = useState('rtl');\r\n\r\n    useEffect(() => {\r\n        setDirection(cookie.get('dir'))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"error-container\">\r\n            <div style={{ direction: direction }} className=\"error-wrapper\">\r\n                <Button onClick={handleClose} > X </Button>\r\n                <p>{errorTxt}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Loader.js",["114"],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Authenticated.js",["115","116","117"],"import React, { useState, useEffect } from 'react';\r\nimport { baseUrl, authEndPoint } from '../constants/api';\r\nimport history from './history';\r\nimport { Text } from './language/Language';\r\nimport { useForm } from 'react-hook-form';\r\nimport Cookies from 'universal-cookie';\r\nimport ErrorModal from './ErrorModal';\r\nimport Button from './Button';\r\n\r\nexport default function Authenticated() {\r\n    const [fullname, setFullname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => setShowModal(!showModal)\r\n    const getDirection = () => {return cookie.get('dir')}\r\n    const handleClick = () =>  history.push(\"/Welcome\")\r\n    useEffect(() => {\r\n        const token = cookie.get(\"token\")\r\n\r\n        fetch(`${baseUrl}/${authEndPoint}?origin=*`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        })\r\n            .then((response) => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then((responseData) => {\r\n                if (responseData.status == 200) {\r\n                    setFullname(responseData.data.data.full_name)\r\n                    setName(responseData.data.data.name)\r\n                    setUsername(responseData.data.data.username)\r\n                } else {\r\n                    setShowModal(!showModal)\r\n                    setErrorMessage(responseData.data.message)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setShowModal(!showModal)\r\n                setErrorMessage(<Text tid=\"server-error-500\" />)\r\n            });\r\n    }, [])\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {showModal && <ErrorModal errorTxt={errorMessage} handleClose={handleClose} />}\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n                <div className=\"wrapper\">\r\n                    <label style={{ direction: getDirection() }}>{<Text tid=\"fullname\" />}</label>\r\n                    <input className=\"input\" name=\"fullname\" value={fullname} ref={register({ required: true })} onChange={(e) => setFullname(e.target.value)} />\r\n                    <label style={{ direction: getDirection() }}>{<Text tid=\"name\" /> }</label>\r\n                    <input className=\"input\" name=\"name\" value={name} ref={register({ required: true })} onChange={(e) => setName(e.target.value)} />\r\n                    <label style={{ direction: getDirection() }}>{<Text tid=\"username\" />}</label>\r\n                    <input className=\"input\" name=\"username\" value={username} ref={register({ required: true })} onChange={(e) => setUsername(e.target.value)} />\r\n                    <Button onClick={handleClick} >\r\n                        {<Text tid=\"register-btn\" />}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}","D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Button.js",[],"D:\\projects\\MapsaProjects\\MyExercises\\simple-login\\src\\components\\Welcome.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":15},{"ruleId":"124","severity":1,"message":"128","line":8,"column":12,"nodeType":"126","messageId":"127","endLine":8,"endColumn":24},{"ruleId":"124","severity":1,"message":"129","line":9,"column":11,"nodeType":"126","messageId":"127","endLine":9,"endColumn":26},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":24,"column":9,"nodeType":"134","messageId":"135","endLine":27,"endColumn":10},{"ruleId":"136","severity":1,"message":"137","line":43,"column":41,"nodeType":"138","messageId":"139","endLine":43,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":47,"column":73,"nodeType":"138","messageId":"139","endLine":47,"endColumn":75},{"ruleId":"140","severity":1,"message":"141","line":68,"column":17,"nodeType":"142","endLine":68,"endColumn":53},{"ruleId":"143","severity":1,"message":"144","line":74,"column":87,"nodeType":"145","endLine":74,"endColumn":98},{"ruleId":"124","severity":1,"message":"146","line":17,"column":37,"nodeType":"126","messageId":"127","endLine":17,"endColumn":43},{"ruleId":"147","severity":1,"message":"148","line":23,"column":8,"nodeType":"149","endLine":23,"endColumn":10,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"137","line":49,"column":35,"nodeType":"138","messageId":"139","endLine":49,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":70,"column":17,"nodeType":"142","endLine":70,"endColumn":52},{"ruleId":"147","severity":1,"message":"151","line":9,"column":9,"nodeType":"152","endLine":9,"endColumn":31},{"ruleId":"147","severity":1,"message":"153","line":12,"column":8,"nodeType":"149","endLine":12,"endColumn":10,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"141","line":36,"column":6,"nodeType":"142","endLine":36,"endColumn":29},{"ruleId":"124","severity":1,"message":"146","line":16,"column":37,"nodeType":"126","messageId":"127","endLine":16,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":33,"column":41,"nodeType":"138","messageId":"139","endLine":33,"endColumn":43},{"ruleId":"147","severity":1,"message":"155","line":46,"column":8,"nodeType":"149","endLine":46,"endColumn":10,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'mobileNumber' is assigned a value but never used.","'handleMobNumber' is assigned a value but never used.",["157"],["158"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array.","ArrayExpression",["159"],"The 'cookie' object construction makes the dependencies of useEffect Hook (at line 21) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'cookie' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'cookie' and 'showModal'. Either include them or remove the dependency array. You can also do a functional update 'setShowModal(s => ...)' if you only need 'showModal' in the 'setShowModal' call.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [model]",{"range":"168","text":"169"},"Update the dependencies array to be: [cookie]",{"range":"170","text":"171"},"Update the dependencies array to be: [cookie, showModal]",{"range":"172","text":"173"},[848,850],"[model]",[382,384],"[cookie]",[1890,1892],"[cookie, showModal]"]